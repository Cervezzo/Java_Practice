public static void main(String[] args) throws FileNotFoundException {
        File test = new File("C://test.txt");
        Scanner input = new Scanner(test);
        collapseSpaces(input);
    }

public static void collapseSpaces(Scanner input) {
        String tempStr;
        String content = "";

        while (input.hasNext()) {
            tempStr = input.nextLine();
            if (tempStr.length() != 0) {
                content += tempStr.replaceAll("\\s+", " ").trim(); //掐头去尾
                content += "\n";
                /*
                 replaceAll("\\s","")
                \w = Anything that is a word character
                \W = Anything that isn't a word character (including punctuation etc)
                \s = Anything that is a space character (including space, tab characters etc)
                \S = Anything that isn't a space character (including both letters and numbers, as well as punctuation etc)
                (Edit: As pointed out, you need to escape the backslash if you want \s to reach the regex engine, resulting in \\s.)
                */
            } else {
                content += "\n"; // add a new line if the string is empty (which means an empty line)
            }
        }
        System.out.println(content);
    }

/*
Write a static method named collapseSpaces that accepts a 
Scanner representing a file as a parameter and writes that
file's text to the console, with multiple spaces or tabs 
reduced to single spaces between words that appear on the same line. 
For example, if a Scanner variable named input is reading an 
input file containing the following text:
*/
